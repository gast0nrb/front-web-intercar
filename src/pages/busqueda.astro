---
import Layout from "../layouts/Layout.astro";
import Pagination from "../components/Pagination.astro";
import Card from "../components/Card.astro";
import NamePage from "../components/category/NamePage.astro";

let apiUrl = "http://localhost:8080/api/intercar"; //Url de base
const rgx = /[?&]/; //Regex que filtra los diferentes parametros en el req del cliente
const rgxDividirValor = /[a-zA-Z]+=/; //Regex que divide los valors del formato "page=10"
const rq = Astro.request; //toma el request
const url = rq.url.split(rgx); //Hace un array con los valores pasados en el url con la regex "rgx"
//Variables para filtrar valores posteriormente
let text = ""; //Si es 0 trae las categorias, si es 1 trae las subcategorias como filtro
let page = '0'; //Pagination valor

//Recorre los valores de url (array con los parametros de url)
//Y los asigna al valor correspondiente para su posterior uso en el la url en la cual se realizarÃ¡ el fetch
url.map((val) => {
	if (val.includes("text")) {
		text = val.replace(rgxDividirValor, "");
	}
	if (val.includes("page")) {
		page = val.replace(rgxDividirValor, "");
	}
});
const getProductByText = async () => {
	if (text.length > 0) {
		apiUrl += `/products?page=${page}&text=${text}`;
	} else {
		apiUrl += `/products?page=0`;
	}
	try {
		const fetchProducts = await fetch(apiUrl, {
			method: "GET",
			mode: "cors",
		});
		const jsonProducts = await fetchProducts.json();
		return jsonProducts;
	} catch (err) {
		return err;
	}
};
const data = await getProductByText();
---

<Layout>
<NamePage name={text} pages={data.length}/>
	<div class="mb-10 mt-10 ">
		<div class="grid xs:grid-cols-2 md:grid-cols-3 w-11/12 mx-auto gap-10">
			{data.data.map((p: any) => <Card sku={p.sku} title={p.title}, price={p.price} subcategory={p.SUBCATEGORY}/>)}
		</div>
		<Pagination currentPage={page} text={text} pages={data.length} url={`${Astro.request.url}`}/>
	</div>

</Layout>